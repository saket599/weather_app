{"version":3,"sources":["Weather.jsx","App.js","reportWebVitals.js","index.js"],"names":["api","Weather","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAGMA,EACG,mCADHA,EAEI,2CA+DKC,EA5DC,WACZ,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAyBA,OACI,qBAAKC,UAAmC,oBAAhBF,EAAQG,MAAuBH,EAAQG,KAAKC,KAAM,GAAI,WAAkB,MAAhG,SACI,iCACI,qBAAKF,UAAU,aAAf,SACI,uBAAOG,KAAK,OACRH,UAAU,aACVI,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOC,QACjCA,MAAOZ,EACPa,WAhCL,SAACC,GACI,UAAZA,EAAIC,KACJC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACrDoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,WA6BS,oBAAhBlB,EAAQG,KACb,gCACI,sBAAKD,UAAU,eAAf,UACI,sBAAKA,UAAU,WAAf,cAA4BF,EAAQqB,KAApC,KAA4CrB,EAAQsB,IAAIC,WACxD,qBAAKrB,UAAU,OAAf,SA7BJ,SAACsB,GACjB,IAGIC,EAFO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE/DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EALS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAKzGL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAoBSE,CAAY,IAAIC,WAE3C,sBAAKhC,UAAU,cAAf,UACI,sBAAKA,UAAU,OAAf,UACGiC,KAAKC,MAAMpC,EAAQG,KAAKC,MAD3B,WAGA,qBAAKF,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGG,aAGpD,SCjDNkC,MARf,WACE,OACE,mCACH,cAAC,EAAD,OCKcC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.50795c17.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport './main.css'\r\n\r\nconst api = {\r\n    key: \"c7b6a6291ee8bf9275b383b60a3a834c\",\r\n    base: \"https://api.openweathermap.org/data/2.5/\"\r\n}\r\n\r\nconst Weather = () => {\r\n    const [query, setQuery] = useState('');\r\n    const [weather, setWeather] = useState({});\r\n\r\n    const search = (evt) => {\r\n        if (evt.key === 'Enter') {\r\n            fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n                .then(res => res.json())\r\n                .then(result => {\r\n                    setWeather(result);\r\n                    setQuery('')\r\n                    console.log(result);\r\n                })\r\n        }\r\n    }\r\n    const dateBuilder = (d) => {\r\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n        let day = days[d.getDay()]\r\n        let date = d.getDate();\r\n        let month = months[d.getMonth()];\r\n        let year = d.getFullYear();\r\n\r\n        return `${day} ${date} ${month} ${year}`\r\n    }\r\n\r\n    return (\r\n        <div className={(typeof weather.main != 'undefined')?((weather.main.temp >16)?'app warm':'app'):'app'}>\r\n            <main>\r\n                <div className=\"search-box\">\r\n                    <input type=\"text\"\r\n                        className=\"search-bar\"\r\n                        placeholder=\"search..\"\r\n                        onChange={e => setQuery(e.target.value)}\r\n                        value={query}\r\n                        onKeyPress={search}\r\n\r\n                    />\r\n                </div>\r\n                {(typeof weather.main != 'undefined') ? (\r\n                    <div>\r\n                        <div className=\"location-box\">\r\n                            <div className=\"location\"> {weather.name}, {weather.sys.country}</div>\r\n                            <div className=\"date\">{dateBuilder(new Date())}</div>\r\n                        </div>\r\n                        <div className=\"weather-box\">\r\n                            <div className=\"temp\">\r\n                              {Math.round(weather.main.temp)}Âºc\r\n                    </div>\r\n                            <div className=\"weather\">{weather.weather[0].main}</div>\r\n                        </div>\r\n                    </div>\r\n                ) : ('')}\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","import React from 'react';\nimport './App.css';\nimport Weather from './Weather'\n\nfunction App() {\n  return (\n    <>\n <Weather />\n  </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}